// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "com.github.ben-manes.versions"
buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.28.0"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

ext {
    androidKotlin = [
            core : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            reflect : "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            kotlinxSerializationRuntime: "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    ]

    androidx = [
            appCompat : "androidx.appcompat:appcompat:1.1.0",
            recyclerView : "androidx.recyclerview:recyclerview:1.1.0",
            cardView : "androidx.cardview:cardview:1.0.0",
            constraintLayout : "androidx.constraintlayout:constraintlayout:1.1.3",
            design : "com.google.android.material:material:1.1.0"
    ]

    test = [
            jUnit : "junit:junit:4.13",
            testRunner : "androidx.test:runner:1.2.0",
            espresso : "androidx.test.espresso:espresso-core:3.2.0",

            mockito : [
                    core : "org.mockito:mockito-core:3.3.3",
                    android : "org.mockito:mockito-android:3.3.3"
            ],

            room : "androidx.arch.core:core-testing:2.1.0"
    ]

    retrofit = [
            core : "com.squareup.retrofit2:retrofit:2.9.0",

            converters : [
                    kotlinxSerialization : "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.5.0",
                    scalars : "com.squareup.retrofit2:converter-scalars:2.9.0"
            ]
    ]

    rx = [
            adapter : "com.squareup.retrofit2:adapter-rxjava2:2.9.0",
            java : "io.reactivex.rxjava2:rxjava:2.2.19",
            android : "io.reactivex.rxjava2:rxandroid:2.1.1"
    ]

    glide = [
            core : "com.github.bumptech.glide:glide:4.11.0",
            integration : "com.github.bumptech.glide:okhttp3-integration:4.11.0",
            kapt : "com.github.bumptech.glide:compiler:4.11.0"
    ]

    room = [
            core : "androidx.room:room-rxjava2:2.2.5",
            kapt : "androidx.room:room-compiler:2.2.5"
    ]

    timber = [
            core : "com.jakewharton.timber:timber:4.7.1"
    ]

    koin = [
            core : "org.koin:koin-android:2.1.5",
            scope : "org.koin:koin-android-scope:2.1.5",
            androidx :  "org.koin:koin-androidx-scope:2.1.5"
    ]
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any {  version.toUpperCase().contains(it) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }

    resolutionStrategy {
        componentSelection {
            all {
                if (isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)) {
                    reject('Release candidate')
                }
            }
        }
    }
}